---
  - name: set up nginx proxy server
    hosts: nginx-proxy
    become: true
    become_method: su
    tasks:

      - import_tasks: "{{ root_dir }}/ansible/tasks/networkd-task.yml"
      - import_tasks: "{{ root_dir }}/ansible/tasks/resolved-task.yml"
      - import_tasks: "{{ root_dir }}/ansible/tasks/wireguard-task.yml"

      - name: Installs nginx
        apt: 
          name:
          - nginx
          state: present
          update_cache: true
          
      - name: Copy proxy site configuration file
        copy:
          src: "{{ root_dir }}/nginx-proxy/nginx-proxy-site.nginx"
          dest: '/etc/nginx/sites-enabled/proxy-site'
 
      - name: Delate default site
        file: 
          path: /etc/nginx/sites-enabled/default
          state: absent

      - name: Inline static ip for upstream server
        lineinfile:
          path: '/etc/nginx/sites-enabled/proxy-site'
          regexp: 'server nginx-web.lab;'
          line: "server 10.128.1.13;" # ! IP IS HARDCODED (should be value of nginx-web.lab)! HAD ISSUES WITH NGINX RESOLVING DNS. Should be a domain name

      - name: Enable and restart networkd
        systemd:
          name: nginx.service
          state: restarted
          enabled: yes

      - name: Make /opt/nginx dir
        file:
          path: /opt/nginx
          state: directory

      - name: Download nginx exporter
        get_url:
          url: 'https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v0.10.0/nginx-prometheus-exporter_0.10.0_linux_amd64.tar.gz'
          dest: /tmp
          mode: '0755'

      - name: Unarchive exporter
        unarchive:
          src: "/tmp/nginx-prometheus-exporter_0.10.0_linux_amd64.tar.gz"
          remote_src: yes
          dest: /opt/nginx

      - name: Adding user for prometheus wg exporter
        user:
          name: wg_exporter
          shell: /sbin/nologin

      - name: Change ownership of exporter files
        file:
          path: /opt/nginx
          owner: wg_exporter
          group: wg_exporter
          recurse: yes

      - name: Copy exporter service file
        copy: 
          src: "{{ root_dir }}/nginx-proxy/prom-nginx-exporter.service"
          dest: '/etc/systemd/system/prom-nginx-exporter.service'

      - name: Run a prometheus exporter for nginx
        systemd:
          name: prom-nginx-exporter.service
          state: restarted
          enabled: yes
          daemon_reload: yes
          
      - import_tasks: "{{ root_dir }}/ansible/tasks/reboot-task.yml"
      