---
  - name: set up prometheus server
    hosts: prometheus
    become: yes
    become_method: su
    tasks:

      - import_tasks: "{{ root_dir }}/playbooks/tasks/networkd-task.yml"
      - import_tasks: "{{ root_dir }}/playbooks/tasks/resolved-task.yml"
      - import_tasks: "{{ root_dir }}/playbooks/tasks/wireguard-task.yml"

      - name: Download prometheus
        get_url:
          url: 'https://github.com/prometheus/prometheus/releases/download/v2.37.0/prometheus-2.37.0.linux-amd64.tar.gz'
          dest: /tmp
          mode: '0755'
          force: no

      - name: Create /opt/prometheus dir
        file: 
          path: /opt/prometheus
          state: directory

      - name: unarchive prometheus
        unarchive:
          src: "/tmp/prometheus-2.37.0.linux-amd64.tar.gz"
          remote_src: yes
          dest: /opt

      - name: copy prometheus service file and related files
        copy: src={{ item.src}} dest={{item.dest}}
        with_items:
          - { src: "{{ root_dir }}/prometheus/prometheus.service", dest: '/etc/systemd/system/prometheus.service'}
          - { src: "{{ root_dir }}/prometheus/prometheus-config.yml", dest: '/opt/prometheus-2.37.0.linux-amd64/prometheus.yml'}

      - name: Adding user for prometheus
        user:
          name: prometheus
          shell: /sbin/nologin

      - name: change ownership of prometheus files
        file:
          path: /opt/prometheus-2.37.0.linux-amd64
          owner: prometheus
          group: prometheus
          mode: '755'
          recurse: yes

# this should be done most likely differently, but I dont know administrators security policies
      - name: add setuid to wg, so exporter can see data
        file:
          path: /usr/bin/wg
          mode: u+s

      - name: enable and restart prometheus service
        systemd:
          name: prometheus.service
          state: restarted
          enabled: yes
          daemon_reload: yes

      - name: install ansible, sshpass
        apt: 
          name:
          - ansible
          - sshpass
          state: present
          update_cache: true

      - name: Create /opt/monitoring dir
        file: 
          path: /opt/monitoring
          state: directory

      - name: Create /etc/ansible dir
        file: 
          path: /etc/ansible
          state: directory

      - name: copy logging service file and related files
        copy: src={{item.src}} dest={{item.dest}}
        with_items:
          - { src: "{{ root_dir }}/prometheus/load-log.py.facts", dest: '/opt/monitoring/load-log.py.facts'}
          - { src: "{{ root_dir }}/prometheus/nginx-log.py.facts", dest: '/opt/monitoring/nginx-log.py.facts'}
          - { src: "{{ root_dir }}/prometheus/wireguard-log.py.facts", dest: '/opt/monitoring/wireguard-log.py.facts'}
          - { src: "{{ root_dir }}/prometheus/log-monitor.timer", dest: '/etc/systemd/system/log-monitor.timer'}
          - { src: "{{ root_dir }}/prometheus/log-monitor.target", dest: '/etc/systemd/system/log-monitor.target'}
          - { src: "{{ root_dir }}/prometheus/monitor-load.service", dest: '/etc/systemd/system/monitor-load.service'}
          - { src: "{{ root_dir }}/prometheus/monitor-nginx.service", dest: '/etc/systemd/system/monitor-nginx.service'}
          - { src: "{{ root_dir }}/prometheus/monitor-wireguard.service", dest: '/etc/systemd/system/monitor-wireguard.service'}
          - { src: "{{ root_dir }}/prometheus/hosts", dest: '/opt/monitoring/hosts'}
          - { src: "{{ root_dir }}/prometheus/ansible.cfg", dest: '/etc/ansible/ansible.cfg'}

      - name: enable and start monitoring timer
        systemd:
          name: log-monitor.timer
          state: started
          enabled: yes
          daemon_reload: yes

      - import_tasks: "{{ root_dir }}/playbooks/tasks/reboot-task.yml"
      